.sectionWrapper {
    position: relative;
    overflow: hidden;
}

.blurBackground {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(to bottom,
            rgba(0, 0, 0, 0) 10%,
            rgba(0, 0, 0, 1) 40%,
            rgba(0, 0, 0, 1) 60%,
            rgba(0, 0, 0, 0) 90%);
    z-index: -1;
    transition: filter 0.3s ease;
}

.blurBackground::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    backdrop-filter: blur(var(--blur-value, 0px));
    mask-image: linear-gradient(to bottom,
            transparent 0%,
            black 25%,
            black 75%,
            transparent 100%);
}

.section {
    padding: 0px 0 0px;
    background: transparent;
    max-width: 1200px;
    margin: 0px auto;
    position: relative;
}

.solutionsWrap {
    position: relative;
}

.solutionsRow {
    margin: 0px auto 100px;
    display: flex;
    justify-content: center;
    align-items: stretch;
}

.cardContainer {
    display: flex;
    align-items: stretch;
    width: 100%;
    margin: auto 12.5px;
    gap: 75px;
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 0.5s ease-out, transform 0.5s ease-out;
}

.cardContainer.inView {
    opacity: 1;
    transform: translateY(0);
}

.slideInLeft,
.slideInRight {
    width: calc(50%);
    display: flex;
}

.card {
    border-radius: 10px;
    padding: 20px;
    width: 100%;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    text-align: left;
    background-color: rgba(3, 2, 3, 0.8);
    /* Add some transparency */
    backdrop-filter: blur(5px);
    /* Add backdrop blur for better readability */
}

.problemCard {
    border: 1px dashed #444;
}

.solutionCard {
    border: 2px solid var(--color-primary);
    background-image: url('../../../public/img/s-dots_2.svg');
    background-repeat: no-repeat;
    background-position: top right;
    position: relative;
    overflow: hidden;
    animation: neonPulse 1.5s infinite alternate;
    background-color: rgba(3, 2, 3, 0.6);
    /* More transparency for solution cards */
}

@keyframes neonPulse {
    from {
        opacity: 1;
        box-shadow:
            inset 0 0 5px var(--color-primary),
            inset 0 0 7.5px var(--color-primary),
            inset 0 0 10px var(--color-primary),
            0 0 4px var(--color-primary),
            0 0 4px var(--color-primary);
    }

    to {
        opacity: 1;
        box-shadow:
            inset 0 0 10px var(--color-primary),
            inset 0 0 15px var(--color-primary),
            inset 0 0 20px var(--color-primary),
            0 0 8px var(--color-primary),
            0 0 8px var(--color-primary);
    }
}

.problemCardMdtop,
.solutionCardMdtop {
    margin-bottom: 16px;
}

.problemCardIcon,
.solutionCardIcon {
    margin-bottom: 32px;
    position: relative;
    width: 80px;
    height: 80px;
}

.problemCardTitle,
.solutionCardTitle {
    font-weight: 600;
    font-size: 2rem;
    line-height: 2.5rem;
    margin-top: 8px;
    min-height: 5rem;
}

.problemCardTitle {
    color: var(--color-light);
}

.solutionCardTitle {
    color: var(--color-primary);
}

.problemCardText,
.solutionCardText {
    margin-top: 16px;
    font-weight: 500;
    font-size: .9375rem;
    line-height: 1.375rem;
    flex-grow: 1;
}

.problemCardText {
    color: #868686;
}

.solutionCardText {
    color: var(--color-light);
}

.problemCardIcon img,
.solutionCardIcon img {
    width: 100%;
    height: 100%;
    object-fit: contain;
}

.progressTwo {
    position: relative;
    width: 2px;
    align-self: stretch;
    display: flex;
    flex-direction: column;
    align-items: center;
}

.progressTwoLine {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
    width: 2px;
    background-color: #444;
    overflow: hidden;
}

.lineInner {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    background-color: var(--color-primary);
    transition: all .1s ease;
}

.progressTwoMobile {
    text-align: center;
    padding: 20px;
}

.sliderArrow {
    display: inline-block;
    margin: 0 6px;
}

.downArrow {
    display: block;
    width: 6px;
    height: 6px;
    transform: rotate(45deg);
    border-right: 2px solid var(--color-light);
    border-bottom: 2px solid var(--color-light);
    animation: mouse-scroll 1s infinite;
}

.downArrow-2 {
    animation-delay: .2s;
    animation-direction: alternate;
}

.downArrow-3 {
    animation-delay: .3s;
}

@media (max-width: 768px) {
    .solutionsRow {
        flex-direction: column;
        align-items: center;
        margin-bottom: 50px;
    }

    .cardContainer {
        flex-direction: column;
        gap: 20px;
    }

    .slideInLeft,
    .slideInRight {
        width: 100%;
    }

    .card {
        width: 100%;
        padding: 15px;
        display: flex;
        flex-direction: column;
    }

    .problemCardMdtop,
    .solutionCardMdtop,
    .problemCardIcon,
    .solutionCardIcon,
    .problemCardTitle,
    .solutionCardTitle {
        flex-shrink: 0;
    }

    .problemCardText,
    .solutionCardText {
        flex-grow: 1;
        display: flex;
        align-items: center;
    }

    .problemCardTitle,
    .solutionCardTitle {
        font-size: 1.5rem;
        min-height: auto;
    }

    .problemCardText,
    .solutionCardText {
        font-size: .875rem;
    }

    .progressTwo {
        display: none;
    }

    .solutionCard::before,
    .solutionCard::after {
        animation: electricNeonPulse 1.5s infinite alternate;
    }
}

.swiperContainer {
    width: 100%;
    height: auto;
}

.swiperSlide {
    height: auto;
    display: flex;
    flex-direction: column;
}

.slideInLeft {
    opacity: 0;
    transform: translateX(-50px);
    transition: opacity 0.5s ease-out, transform 0.5s ease-out;
}

.slideInRight {
    opacity: 0;
    transform: translateX(50px);
    transition: opacity 0.5s ease-out, transform 0.5s ease-out;
}

.inView .slideInLeft,
.inView .slideInRight {
    opacity: 1;
    transform: translateX(0);
}

.equalHeightSlides {
    display: flex;
    flex-direction: column;
}

.equalHeightSlides .swiper-slide {
    height: auto;
    display: flex;
    flex-direction: column;
}

.equalHeightSlides .card {
    flex: 1;
    display: flex;
    flex-direction: column;
}

.equalHeightSlides .problemCardMdtop,
.equalHeightSlides .solutionCardMdtop {
    flex-grow: 0;
}

.equalHeightSlides .problemCardText,
.equalHeightSlides .solutionCardText {
    flex-grow: 1;
}

@media (max-width: 768px) {
    .equalHeightSlides .swiper-slide {
        display: flex;
        flex-direction: column;
        height: auto;
    }

    .equalHeightSlides .card {
        flex: 1;
    }
}